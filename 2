import { Theme, Icons } from "../theme.slint";
import { Logic } from "../logic.slint";
import { IconBtn } from "icon-btn.slint";
import { TextBtnWithoutIcon } from "btn.slint";

export component Pagination inherits Rectangle {
    in-out property <int> total-pages: 10;
    in-out property <int> current-page: 2;
    in-out property <int> show-pages: 6;

    in-out property <length> font-size: Theme.title1-font-size;
    in-out property <length> icon-size: Theme.icon-size * 1.3;

    private property <int> start-page: 0;
    private property <int> real-show-pages-half: Math.round(show-pages / 2);
    private property <int> real-current-page: Math.clamp(0, current-page, total-pages - show-pages - 1);

    callback jump-page(int);

    if show-pages >= total-pages: HorizontalLayout {
        init => {
            root.preferred-width = self.preferred-width;
            root.preferred-height = self.preferred-height;
        }

        spacing: Theme.spacing * 4;

        IconBtn {
            icon: Icons.arrow-left-round;
            use-auto-size: true;
            icon-size: root.icon-size;

            clicked => {
                root.real-current-page = Math.max(0, root.real-current-page - 1);
                jump-page(root.real-current-page);
            }
        }

        HorizontalLayout {
            spacing: Theme.spacing * 4;
            for index in total-pages: TextBtnWithoutIcon {
                border-radius: self.width / 2;
                background: root.real-current-page == index ? Theme.third-brand-color : Colors.transparent;

                text: start-page + index + 1;
                font-size: root.font-size;
                text-color: root.real-current-page == index ? Theme.base-color : Theme.primary-text-color;

                clicked => {
                    root.real-current-page = index;
                    jump-page(root.real-current-page);
                }
            }
        }

        IconBtn {
            is-ltr: false;
            icon: Icons.arrow-right-round;
            use-auto-size: true;
            icon-size: root.icon-size;

            clicked => {
                root.real-current-page = Math.min(root.total-pages - 1, root.real-current-page + 1);
                jump-page(root.real-current-page);
            }
        }
    }

    if show-pages < total-pages && start-page + show-pages + 1 < total-pages : HorizontalLayout {
        init => {
            root.preferred-width = self.preferred-width;
            root.preferred-height = self.preferred-height;
        }

        spacing: Theme.spacing * 4;

        IconBtn {
            icon: Icons.arrow-left-round;
            use-auto-size: true;
            icon-size: root.icon-size;

            clicked => {
                root.real-current-page = Math.max(0, root.real-current-page - 1);
                jump-page(root.real-current-page);
            }
        }

        HorizontalLayout {
            spacing: Theme.spacing * 4;
            for index in real-show-pages-half: TextBtnWithoutIcon {
                border-radius: self.width / 2;
                background: root.real-current-page == start-page + index ? Theme.third-brand-color : Colors.transparent;

                text: start-page + index + 1;
                font-size: root.font-size;
                text-color: root.real-current-page == start-page + index ? Theme.base-color : Theme.primary-text-color;

                clicked => {
                    root.real-current-page = start-page + index;
                    jump-page(root.real-current-page);
                }
            }

            TextBtnWithoutIcon {
                text: "...";
                font-size: root.font-size;

                clicked => {
                    root.real-current-page = root.start-page + root.real-show-pages-half;
                    root.start-page = root.real-current-page;
                    debug(root.start-page);
                }
            }

            HorizontalLayout {
                spacing: Theme.spacing * 4;

                for index in real-show-pages-half: TextBtnWithoutIcon {
                    private property <int> inner-real-current-page: total-pages - real-show-pages-half + index;

                    border-radius: self.width / 2;
                    text: start-page + inner-real-current-page + 1;
                    font-size: root.font-size;
                    background: root.real-current-page == start-page + inner-real-current-page ? Theme.third-brand-color : Colors.transparent;
                    text-color: root.real-current-page == start-page + inner-real-current-page ? Theme.base-color : Theme.primary-text-color;

                    clicked => {
                        root.real-current-page = start-page + inner-real-current-page;
                        jump-page(root.real-current-page);
                    }
                }
            }
        }

        IconBtn {
            is-ltr: false;
            icon: Icons.arrow-right-round;
            use-auto-size: true;
            icon-size: root.icon-size;

            clicked => {
                root.real-current-page = Math.min(root.total-pages - 1, root.real-current-page + 1);
                jump-page(root.real-current-page);
            }
        }
    }
}
