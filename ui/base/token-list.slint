import { Theme } from "../theme.slint";
import { Store } from "../store.slint";
import { Logic } from "../logic.slint";
import { TokenTile, TokenTileWithSwitch, TokenTileEntry, TokenTileWithSwitchEntry } from "token-tile.slint";
import { SettingDetail, SettingDetailInner } from "setting-detail.slint";
import { Loading } from "loading.slint";
import { NoDataImg } from "no-data.slint";

export component TokenList inherits SettingDetailInner {
    in-out property <[TokenTileEntry]> entries;

    vbox-alignment: LayoutAlignment.start;
    vbox-spacing: Theme.spacing * 2;

    callback clicked(TokenTileEntry);

    for item[index] in entries: TokenTile {
        entry: item;

        clicked => {
            root.clicked(item);
        }
    }
}

export component TokenListWithSwitch inherits SettingDetail {
    in-out property <[TokenTileWithSwitchEntry]> entries;
    in-out property <bool> is-loading;

    callback clicked(TokenTileEntry);
    callback toggled(bool, TokenTileEntry);

    if !is-loading && entries.length > 0: SettingDetailInner {
        vbox-alignment: LayoutAlignment.start;
        vbox-spacing: Theme.spacing * 2;

        for item[index] in entries: TokenTileWithSwitch {
            entry: item.entry;
            checked: item.checked;

            clicked => {
                root.clicked(item.entry);
            }

            toggled => {
                root.toggled(self.checked, item.entry);
            }
        }
    }

    if is-loading: Loading {
        loading-text: Logic.tr(Store.is-cn, "正在刷新...");
        colorize: Theme.secondary-brand-color;
        icon-size: Theme.icon-size * 2;
    }

    if !is-loading && entries.length == 0: Rectangle {
        NoDataImg {
            text: Logic.tr(Store.is-cn, "没有数据");
        }
    }
}
