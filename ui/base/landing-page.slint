import { Theme, Icons } from "../theme.slint";
import { Logic } from "../logic.slint";
import { Store} from "../store.slint";
import { TextBtn } from "./btn.slint";
import { CenterLayout } from "center-layout.slint";
import { Label} from "label.slint";
import { RadioBtn } from "./radio-btn.slint";

export struct LandingDetail {
    picture: image,
    description: string,
}

component LangPage inherits Rectangle {
    in property <length> root-width: 100px;
    in property <length> root-height: 100px;

    HorizontalLayout {
        height: root.height;
        alignment: LayoutAlignment.center;

        VerticalLayout {
            vertical-stretch: 1;
            alignment: LayoutAlignment.center;
            spacing: Theme.spacing * 5;

            Image {
                width: min(root-height, root-width) * 0.5;
                height: self.width;
                source: Icons.landing-language-switch;
            }

            Label {
                text: Logic.tr(Store.is-cn, "请选择语言");
                font-size: Theme.title3-font-size;
                color: Theme.secondary-brand-color;
            }

            RadioBtn {
                text: "中文";
                checked: Store.setting-ui.language == "cn";
                check => {
                    Store.setting-ui.language = "cn";
                    Logic.set-setting-ui(Store.setting-ui);
                }
            }

            RadioBtn {
                text: "English";
                checked: Store.setting-ui.language == "en";
                check => {
                    Store.setting-ui.language = "en";
                    Logic.set-setting-ui(Store.setting-ui);
                }
            }
        }
    }
}

component DetailsPage inherits Rectangle {
    in property <length> root-width: 100px;
    in property <length> root-height: 100px;
    in property <[LandingDetail]> details;
    in property <int> current-index: 0;

    for detail[index] in details: Rectangle {
        if current-index == index: VerticalLayout {
            vertical-stretch: 1;
            alignment: LayoutAlignment.center;
            spacing: Theme.spacing * 5;

            Rectangle {
                Image {
                    width: min(root-height, root-width) * 0.8;
                    height: self.width;
                    source: detail.picture;
                }
            }

            Label {
                horizontal-stretch: 1;
                horizontal-alignment: TextHorizontalAlignment.center;
                color: Theme.secondary-brand-color;
                text: detail.description;
                wrap: TextWrap.word-wrap;
            }
        }
    }
}

export component LandingPage inherits Rectangle {
    background: Theme.base-background;

    callback skipped <=> skip-btn.clicked;

    private property <int> current-index: -1;
    in property <[LandingDetail]> details;

    VerticalLayout {
        padding: Theme.padding * 5;
        padding-left: Theme.padding * 2;
        padding-right: Theme.padding * 2;
        spacing: Theme.spacing * 2;

        HorizontalLayout {
            alignment: LayoutAlignment.end;
            skip-btn := TextBtn {
                text: Logic.tr(Store.is-cn, "跳过");
                colorize: Theme.have-read-text-color;
                font-size: Theme.default-font-size - 2px;
            }
        }

        if current-index < 0: LangPage {
            root-width: root.width;
            root-height: root.height;
        }

        if current-index >= 0: DetailsPage {
            root-width: root.width;
            root-height: root.height;
            details: details;
            current-index: current-index;
        }

        HorizontalLayout {
            alignment: current-index == -1 ? LayoutAlignment.end : LayoutAlignment.space-between;

            if current-index > -1: TextBtn {
                text: Logic.tr(Store.is-cn, "返回");
                colorize: Theme.have-read-text-color;
                font-size: Theme.default-font-size - 2px;
                clicked => {
                    current-index -= 1;
                }
            }

            TextBtn {
                font-size: Theme.default-font-size - 2px;
                text: Logic.tr(Store.is-cn,
                            details.length == current-index + 1 ? "完成" : "下一步");
                clicked => {
                    current-index += 1;

                    if (details.length == current-index) {
                        root.skipped();
                    }
                }
            }
        }
    }
}
