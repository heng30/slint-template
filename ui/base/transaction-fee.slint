import { Theme, Icons } from "../theme.slint";
import { Logic } from "../logic.slint";
import { Store } from "../store.slint";
import { Label } from "label.slint";
import { LineInput } from "line-input.slint";
import { CancelBtn, ConfirmBtn } from "btn.slint";
import { SettingDetail, SettingDetailInner, SettingDetailInnerVbox, SettingDetailLabel } from "setting-detail.slint";
import { Loading } from "loading.slint";
import { LoadingStatus } from "def.slint";

export component TransactionFee inherits SettingDetail {
    in property network <=> network-input.text;
    in property send-token <=> send-token-input.text;
    in property send-address <=> send-address-input.text;
    in property recipient-address <=> recipient-address-input.text;
    in property send-amount <=> amount-input.text;
    in property <string> send-amount-usdt;
    in property <string> fee;
    in property <string> fee-usdt;
    in property <string> create-token-account-fee;
    in property <string> create-token-account-fee-usdt;
    in property <string> memo;
    in property <string> prioritization-fee;

    in property <LoadingStatus> loading-status;

    callback cancel();
    callback confirm();

    title: Logic.tr(Store.is-cn, "交易信息");

    SettingDetailInner {
        if loading-status == LoadingStatus.Loading: Loading {
            height: 150px;
            loading-text: Logic.tr(Store.is-cn, "正在估计交易费用...");
            colorize: Theme.secondary-brand-color;
            icon-size: Theme.icon-size * 2;
        }

        SettingDetailInnerVbox {
            SettingDetailLabel {
                text: Logic.tr(Store.is-cn, "区块网络");
            }

            network-input := LineInput {
                width: root.width - Theme.spacing * 4;
                text: "test";
                enabled: false;
                is-show-icon: false;
            }
        }

        SettingDetailInnerVbox {
            SettingDetailLabel {
                text: Logic.tr(Store.is-cn, "发送代币");
            }

            send-token-input := LineInput {
                width: root.width - Theme.spacing * 4;
                text: "ETH";
                enabled: false;
                is-show-icon: false;
            }
        }

        SettingDetailInnerVbox {
            SettingDetailLabel {
                text: Logic.tr(Store.is-cn, "发送地址");
            }

            send-address-input := LineInput {
                width: root.width - Theme.spacing * 4;
                text: "0xf1199999751b1a3A74590adBf95401D19AB30014";
                enabled: false;
                is-show-icon: false;
            }
        }

        SettingDetailInnerVbox {
            SettingDetailLabel {
                text: Logic.tr(Store.is-cn, "接收地址");
            }

            recipient-address-input := LineInput {
                width: root.width - Theme.spacing * 4;
                text: "GEScvfEF1Xt2oyrnJij5V5DYSmPjuUt45DfUs3VFrsED";
                enabled: false;
                is-show-icon: false;
            }
        }

        SettingDetailInnerVbox {
            SettingDetailLabel {
                text: Logic.tr(Store.is-cn, "发送数量");
            }

            amount-input := LineInput {
                width: root.width - Theme.spacing * 4;
                text: "0";
                input-type: InputType.decimal;
                is-show-icon: false;
                enabled: false;
            }

            if send-amount-usdt != "": Label {
                text: root.send-amount-usdt;
                color: Theme.have-read-text-color;
            }
        }

        if loading-status == LoadingStatus.Success: SettingDetailInnerVbox {
            SettingDetailLabel {
                text: Logic.tr(Store.is-cn, "基础费用");
            }

            LineInput {
                width: root.width - Theme.spacing * 4;
                text: root.fee;
                is-show-icon: false;
                enabled: false;
            }

            if fee-usdt != "": Label {
                text: root.fee-usdt;
                color: Theme.have-read-text-color;
            }
        }

        if root.prioritization-fee != "": SettingDetailInnerVbox {
            SettingDetailLabel {
                text: Logic.tr(Store.is-cn, "优先费用");
            }

            LineInput {
                width: root.width - Theme.spacing * 4;
                text: root.prioritization-fee;
                is-show-icon: false;
                enabled: false;
            }
        }

        if loading-status == LoadingStatus.Success && root.create-token-account-fee != "": SettingDetailInnerVbox {
            SettingDetailLabel {
                text: Logic.tr(Store.is-cn, "创建账户费用");
            }

            LineInput {
                width: root.width - Theme.spacing * 4;
                text: root.create-token-account-fee;
                is-show-icon: false;
                enabled: false;
            }

            if root.create-token-account-fee-usdt != "": Label {
                text: root.create-token-account-fee-usdt;
                color: Theme.have-read-text-color;
            }
        }

        if root.memo != "": SettingDetailInnerVbox {
            SettingDetailLabel {
                text: Logic.tr(Store.is-cn, "备注");
            }

            LineInput {
                width: root.width - Theme.spacing * 4;
                text: root.memo;
                is-show-icon: false;
                enabled: false;
            }
        }

        HorizontalLayout {
            padding-top: Theme.padding * 5;
            padding-bottom: Theme.padding * 5;

            if loading-status == LoadingStatus.Loading: CancelBtn {
                border-radius: Theme.border-radius;
                text: Logic.tr(Store.is-cn, "取消");
                clicked => {
                    root.cancel();
                }
            }

            if loading-status == LoadingStatus.Fail: CancelBtn {
                border-radius: Theme.border-radius;
                bg-color: Theme.warning-color;
                text: Logic.tr(Store.is-cn, "估计交易费用失败");
                icon: Icons.warning;
                clicked => {
                    root.back();
                }
            }

            if loading-status == LoadingStatus.Success: ConfirmBtn {
                border-radius: Theme.border-radius;
                text: Logic.tr(Store.is-cn, "确认");
                clicked => {
                    root.confirm();
                }
            }
        }
    }
}
