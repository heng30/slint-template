import { Theme } from "../theme.slint";
import { Label } from "./label.slint";

export component RadioBtn inherits Rectangle {
    in-out property text <=> txt.text;
    in-out property enabled <=> ta.enabled;
    in-out property <bool> checked;
    in-out property <color> text-color: Theme.primary-text-color;

    in-out property h-spacing <=> hbox.spacing;

    width: hbox.preferred-width;
    height: hbox.preferred-height;

    callback check();

    if ta.enabled: Rectangle {
        x: hbox.x - (self.width - inner.width) / 2;
        width: inner.width + Theme.spacing * 4;
        height: self.width;
        border-radius: self.width / 2;
        background: (ta.has-hover && !root.checked) ? Theme.hover-background : Colors.transparent;
    }

    hbox := HorizontalLayout {
        spacing: Theme.spacing * 2;
        alignment: start;

        VerticalLayout {
            alignment: center;
            inner := Rectangle {
                width: Theme.default-font-size * 1.1;
                height: self.width;
                border-width: 2px;
                border-radius: self.width / 2;
                border-color: root.enabled ? (root.checked ? Theme.thirdly-brand-color : Theme.secondary-text-color) : Theme.disabled-color;

                if root.checked: Rectangle {
                    width: 60%;
                    height: self.width;
                    background: parent.border-color;
                    border-radius: self.width / 2;
                }
            }
        }

        VerticalLayout {
            alignment: center;
            txt := Label {
                color: root.enabled ? root.text-color : Theme.disabled-color;
            }
        }
    }

    fs := FocusScope { }

    ta := TouchArea {
        mouse-cursor: root.checked ? MouseCursor.default : MouseCursor.pointer;
        clicked => {
            fs.focus();

            if (!root.checked) {
                root.check();
            }
        }
    }
}
