import { Dialog } from "./dialog.slint";
import { Store } from "../store.slint";
import { Util } from "../util.slint";
import { Logic } from "../logic.slint";
import { Theme, Icons } from "../theme.slint";
import { Label } from "./label.slint";
import { CancelBtn, ConfirmBtn } from "./btn.slint";

export global ConfirmDialogSetting {
    in-out property <bool> show;
    out property <string> title-text: "警告";
    out property <string> body-text;
    out property <string> handle-type;
    out property <string> user-data;

    public function set(show: bool, title-text: string, body-text: string, handle-type: string, user-data: string) {
        self.show = show;
        self.title-text = title-text;
        self.body-text = body-text;
        self.handle-type = handle-type;
        self.user-data = user-data;
    }

    public function hide() {
        self.show = false;
    }
}

export component ConfirmDialog inherits Rectangle {
    height: vbox.preferred-height + Theme.padding * 2;
    background: Theme.base-background;
    border-radius: Theme.border-radius;

    in-out property <bool> is-prevent-event-forward: false;
    in-out property <string> title: ConfirmDialogSetting.title-text;
    in-out property vbox-preferred-width <=> vbox.preferred-width;

    if is-prevent-event-forward: TouchArea { }

    vbox := VerticalLayout {
        alignment: start;
        padding: Theme.padding * 4;
        spacing: Theme.spacing * 4;

        title-label := Label {
            text: root.title;
            color: Theme.primary-text-color;
            font-size: Theme.title1-font-size;
        }

        Label {
            wrap: word-wrap;
            color: Theme.secondary-text-color;
            font-size: Theme.title4-font-size;
            text: ConfirmDialogSetting.body-text;
        }

        HorizontalLayout {
            alignment: end;
            spacing: Theme.spacing * 4;

            CancelBtn {
                text: Logic.tr("Cancel");
                icon: Icons.cancel;

                clicked => {
                    ConfirmDialogSetting.show = false;
                }
            }

            ConfirmBtn {
                icon: Icons.success;
                text: Logic.tr("Confirm");

                clicked => {
                    Util.handle-confirm-dialog(ConfirmDialogSetting.handle-type, ConfirmDialogSetting.user-data);
                    ConfirmDialogSetting.show = false;
                }
            }
        }
    }
}
