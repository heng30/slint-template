import { Theme } from "../theme.slint";
import { Label } from "./label.slint";
import { IconBtn } from "./icon-btn.slint";

// Example:
// LineInput {
//     placeholder-text: Logic.tr("keyword");
//     icon: Icons.paste;
//     icon-colorize: Theme.icon-color;
//     is-show-icon: true;

//     // catch special keys, likes: Ctrl + A
//     key-pressed(event) => {
//         debug(event.text);
//     }

//     clicked => {
//         debug("clicked");
//     }

//     edited => {
//     }
//     accepted => {
//     }
// }

export component LineInput inherits Rectangle {
    in-out property text <=> text-input.text;
    in-out property font-size <=> text-input.font-size;
    in property input-type <=> text-input.input-type;
    in property read-only <=> text-input.read-only;
    in property <bool> enabled <=> text-input.enabled;
    in property <string> placeholder-text;

    in property <bool> is-show-icon;
    in property <image> icon;
    in property <color> icon-colorize: Theme.icon-color;
    in property <length> icon-size: Theme.icon-size;

    in property <length> hpadding: Theme.padding * 3;
    in property <length> vpadding: Theme.padding * 3;

    callback clicked();
    callback accepted();
    callback edited <=> text-input.edited;
    callback key-pressed(KeyEvent);

    preferred-width: 300px;
    preferred-height: hbox.preferred-height;

    forward-focus: text-input;
    border-radius: Theme.border-radius;
    border-width: text-input.has-focus ? 2px : 1px;
    border-color: text-input.has-focus ? Theme.third-brand-color : Theme.base-border-color;

    public function paste() {
        text-input.paste();
    }

    public function copy() {
        text-input.copy();
    }

    hbox := HorizontalLayout {
        spacing: Theme.spacing * 2;
        padding-left: root.hpadding;
        padding-right: root.hpadding;
        padding-top: root.vpadding;
        padding-bottom: root.vpadding;

        Flickable {
            viewport-width: text-input.preferred-width + Theme.padding;
            height: text-input.preferred-height;

            Rectangle {
                x: 0;
                width: Math.max(parent.width, text-input.preferred-width);

                fs := FocusScope {
                    key-pressed(event) => {
                        if (event.text == Key.Escape) {
                            fs.focus();
                        }
                        root.key-pressed(event);
                        accept
                    }

                    text-input := TextInput {
                        single-line: true;
                        vertical-alignment: TextVerticalAlignment.center;
                        color: Theme.primary-text-color;

                        accepted => {
                            self.clear-focus();
                            root.accepted();
                        }
                    }
                }

                if text-input.text == "": Label {
                    x: 0;
                    text: root.placeholder-text;
                    color: Theme.placeholder-text-color;
                    font-size: text-input.font-size - 2px;
                }

                ta := TouchArea {
                    enabled: text-input.text == "";
                    mouse-cursor: MouseCursor.text;

                    clicked => {
                        text-input.focus();
                    }
                }
            }
        }

        if root.is-show-icon: VerticalLayout {
            alignment: LayoutAlignment.center;

            IconBtn {
                width: root.icon-size;
                height: self.width;
                icon: root.icon;
                icon-size: root.icon-size;
                colorize: root.icon-colorize;

                clicked => {
                    root.clicked();
                }
            }
        }
    }
}
