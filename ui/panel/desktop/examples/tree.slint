import { Theme, Store, Icons } from "../../def.slint";
import { Tree, ExampleComponent } from "../../../base/widgets.slint";

export component TreeExample inherits Flickable {
    viewport-height: vbox.preferred-height;
    viewport-width: vbox.preferred-width;

    vbox := VerticalLayout {
        padding-top: Theme.padding * 5;
        padding-bottom: Theme.padding * 5;
        spacing: Theme.spacing * 20;
        alignment: LayoutAlignment.center;

        HorizontalLayout {
            width: root.width;
            alignment: LayoutAlignment.center;

            ExampleComponent {
                width: Math.max(1000px, root.width * 0.8);

                Tree {
                    border-width: 1px;
                    border-color: Theme.base-border-color;
                    border-radius: Theme.border-radius;

                    level-one-entries: [
                        {
                            is-open: true,
                            current-node: Store.is-cn ? "亚洲" : "Asia",
                            icon: Icons.address,
                        },
                        {
                            current-node: Store.is-cn ? "北美洲" : "North America",
                        }
                    ];

                    level-two-entries: [
                        {
                            is-open: true,
                            parent-node: Store.is-cn ? "亚洲" : "Asia",
                            current-node: Store.is-cn ? "中国" : "China",
                            icon: Icons.airdrop,
                        },
                        {
                            parent-node: Store.is-cn ? "北美洲" : "North America",
                            current-node: Store.is-cn ? "美国" : "America",
                        }
                    ];

                    level-three-entries: [
                        {
                            parent-node: Store.is-cn ? "中国" : "China",
                            current-node:  Store.is-cn ? "珠海" : "ZhuHai",
                            icon: Icons.delete,
                            key: "zhuhai",
                        },
                        {
                            parent-node: Store.is-cn ? "中国" : "china",
                            current-node: Store.is-cn ? "广州" : "GuangZhou",
                            key: "guangzhou",
                        },
                        {
                            parent-node: Store.is-cn ? "美国" : "America",
                            current-node: Store.is-cn ? "纽约" : "NewYork",
                        },
                        {
                            parent-node: Store.is-cn ? "美国" : "America",
                            current-node: Store.is-cn ? "加州" : "California",
                        }
                    ];

                    clicked(entries, path, key) => {
                        debug(entries[0], entries[1], entries[3]);
                        debug(path);
                        debug(key);
                    }
                }

                detail: Store.is-cn ? "树层次最多支持3层" : "The most level of a tree sould no more than 3";

                code: "Tree {\n    border-width: 1px;\n    border-color: Theme.base-border-color;\n    border-radius: Theme.border-radius;\n\n    level-one-entries: [{\n        is-open: true,\n        current-node: \"亚洲\",\n    }, {\n        current-node: \"北美洲\",\n    }];\n\n    level-two-entries: [\n        {\n            is-open: true,\n            parent-node: \"亚洲\",\n            current-node: \"中国\",\n        },\n        {\n            parent-node: \"北美洲\",\n            current-node: \"美国\",\n        }\n    ];\n\n    level-three-entries: [\n        {\n            parent-node: \"中国\",\n            current-node: \"珠海\",\n            key: \"zhuhai\",\n        },\n        {\n            parent-node: \"中国\",\n            current-node: \"广州\",\n            key: \"guangzhou\",\n        },\n        {\n            parent-node: \"美国\",\n            current-node: \"纽约\",\n        },\n        {\n            parent-node: \"美国\",\n            current-node: \"加州\",\n        }\n    ];\n\n    clicked(entries, path, key) => {\n        debug(entries[0], entries[1], entries[3]);\n        debug(path);\n        debug(key);\n    }\n}";
            }
        }
    }
}
