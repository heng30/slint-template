import { Theme, Store, TabIndex, SettingDetailIndex, Logic, Icons } from "../def.slint";
import { SettingDialog, AboutDialog, SettingIconsBar } from "../setting/desktop.slint";
import { Blanket, StatusBar, Divider, AboutSetting, ToolTip, ToolTipSetting } from "../../base/widgets.slint";

import { ProcessStep, CircleProgress, RecordIndicator, ProgressBar, LayoutType, ComponentPosition, Pagination, BreadCrumb } from "../../base/widgets.slint";
import { Util } from "../../util.slint";

export component DesktopPanel inherits Rectangle {
    private property <bool> is-show-setting-dialog: !(Store.current-setting-detail-index == SettingDetailIndex.None || Store.current-setting-detail-index == SettingDetailIndex.About);
    private property <bool> is-show-about-dialog: Store.current-setting-detail-index == SettingDetailIndex.About;

    VerticalLayout {
        if Store.setting-preference.no-frame: sb := StatusBar {
            background: Theme.secondary-background;
            is-show-icon: true;
            icon: Icons.brand;
            title: AboutSetting.app-name;
            is-show-tip: true;

            HorizontalLayout {
                padding-right: Theme.padding * 2;

                SettingIconsBar {
                    icon-size: Theme.default-font-size;
                    h-spacing: Theme.spacing * 3;
                    show-icon-hover-background: false;
                    is-show-tip: sb.is-show-tip;
                    tip-position: sb.tip-position;
                }

                VerticalLayout {
                    alignment: LayoutAlignment.center;
                    Divider {
                        height: Theme.default-font-size;
                        width: 2px;
                    }
                }
            }
        }

        VerticalLayout {
            padding: Theme.padding * 2;
            spacing: Theme.spacing * 5;
            vertical-stretch: 1;
            alignment: LayoutAlignment.center;

            VerticalLayout {
                alignment: center;
                spacing: Theme.spacing * 10;

                HorizontalLayout {
                    alignment: center;
                    CircleProgress {
                        ring-width: 15px;
                        progress: Util.progress-value(5s);
                    }
                }

                HorizontalLayout {
                    alignment: center;
                    ProgressBar {
                        is-moving-text: true;
                        progress: Util.progress-value(5s);
                    }
                }

                HorizontalLayout {
                    alignment: center;
                    ProgressBar {
                        width: 50px;
                        height: 150px;
                        layout-type: LayoutType.Vertical;
                        progress: Util.progress-value(5s);
                    }
                }

                HorizontalLayout {
                    alignment: center;
                    ri := RecordIndicator {
                        is-start: true;
                        size: 30px;
                    }
                }

                HorizontalLayout {
                    alignment: center;

                    ProcessStep {
                        steps: ["First Step", "Second Step", "Third Step", "Finished"];
                        current-step: Util.progress-value-int(self.steps.length, self.steps.length * 1s);
                    }
                }

                HorizontalLayout {
                    alignment: LayoutAlignment.center;

                    Pagination {
                        private property <int> current-page: Util.progress-value-int(6, 6s);
                        changed current-page => {
                            self.set-current-page(self.current-page);
                        }

                        total-pages: 6;
                        jump(page) => {
                            debug(page);
                        }
                    }
                }

                HorizontalLayout {
                    alignment: LayoutAlignment.center;

                    BreadCrumb {
                        items: ["home", "blue", "slint", "learn"];
                    }
                }

                HorizontalLayout {
                    alignment: LayoutAlignment.center;

                    SettingIconsBar {
                        background: Theme.secondary-background;
                        h-padding: Theme.spacing * 2;
                        h-spacing: Theme.padding * 5;
                    }
                }
            }
        }
    }

    if is-show-setting-dialog || is-show-about-dialog: Blanket {
        clicked => {
            Logic.switch-setting-detail(SettingDetailIndex.None);
        }
    }

    SettingDialog {
        visible: is-show-setting-dialog;
        width: Math.min(1300px, root.width * 0.8);
    }

    if is-show-about-dialog: AboutDialog {
        width: Math.min(1300px, root.width * 0.8);
    }

    if ToolTipSetting.is-show: ToolTip {
        window-width: root.width;
        window-height: root.height;
    }
}
